openapi: 3.0.3
info:
  title: OGC API - Environmental Data Retrieval Standard
  description: Example of OGC API - Environmental Data Retrieval Standard OpenAPI document
  version: 1.1.0
  license:
    name: OGC License
    url: https://www.ogc.org/legal
servers:
  - url: https://example.org/edr
    description: Example OGC API - Environmental Data Retrieval server
tags:
  - name: Capabilities
    description: Essential characteristics of the information available from the API.
  - name: Collection metadata
    description: Description of the information available from the collections
  - name: Instance metadata
    description: Description of the information available from the instances of a collection
  - name: Collection data queries
    description: Data queries available.
  - name: Instance data queries
    description: Data queries available on instances of the collection.
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page of this API
      description: The landing page provides links to the API definition, the Conformance statements and the metadata about the feature data in this dataset.
      operationId: getLandingPage
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/landingPage'
  /conformance:
    get:
      tags:
        - Capabilities
      summary: Information about standards that this API conforms to
      description: List all requirements classes specified in a standard that the server conforms to
      operationId: getRequirementsClasses
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/conformance'
  /collections:
    get:
      tags:
        - Capabilities
      summary: List the avialable collections from the service
      operationId: listCollections
      parameters:
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/collections'
        default:
          $ref: '#/components/responses/exception'
  /collections/{collectionId}:
    get:
      tags:
        - Collection metadata
      summary: List query types supported by the collection
      description: This will provide information about the query types that are supported by the chosen collection Use content negotiation to request HTML or JSON
      operationId: getQueries
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/collection'
        default:
          $ref: '#/components/responses/exception'
  /collections/{collectionId}/position:
    get:
      tags:
        - Collection data queries
      summary: Query end point for position queries  of collection {collectionId}
      description: Query end point for position queries
      operationId: GetDataForPoint
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/positionCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/parameter-name'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '202':
          $ref: '#/components/responses/202'
        '308':
          $ref: '#/components/responses/308'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '413':
          $ref: '#/components/responses/413'
        default:
          $ref: '#/components/responses/exception'
components:
  parameters:
    f:
      name: f
      in: query
      description: format to return the data response in
      required: false
      schema:
        type: string
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):
        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)
        The coordinate reference system of the values is WGS 84 longitude/latitude
        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
        reference system is specified in the parameter `bbox-crs`.
        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).
        If the vertical axis is included, the third and the sixth number are the
        bottom and the top of the 3-dimensional bounding box.
        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      required: false
      schema:
        oneOf:
          - items:
              type: number
            type: array
            minItems: 4
            maxItems: 4
          - items:
              type: number
            type: array
            minItems: 6
            maxItems: 6
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval. Date and time expressions adhere to RFC 3339. Intervals may be bounded or half-bounded (double-dots at start or end).
        Examples:
        * A date-time: "2018-02-12T23:20:50Z" * A bounded interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Half-bounded intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
        Only resources that have a temporal property that intersects the value of `datetime` are selected.
        If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    collectionId:
      name: collectionId
      in: path
      description: Identifier (id) of a specific collection
      required: true
      schema:
        type: string
    positionCoords:
      name: coords
      in: query
      description: |
        location(s) to return data for, the coordinates are defined by a Well Known Text
        (wkt) string. to retrieve a single location :

        POINT(x y) i.e. POINT(0 51.48) for Greenwich, London

        And for a list of locations

        MULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))

        i.e.
        MULTIPOINT((38.9 -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))

        see http://portal.opengeospatial.org/files/?artifact_id=25355 and 
        https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry

        the coordinate values will depend on the CRS parameter, if this is not defined
        the values will be assumed to WGS84 values (i.e x=longitude and y=latitude)
      required: true
      schema:
        type: string
    z:
      name: z
      in: query
      description: |
        Define the vertical level to return data from 
        i.e. z=level

        for instance if the 850hPa pressure level is being queried

        z=850

        or a range to return data for all levels between and including 2 defined levels
        i.e. z=minimum value/maximum value

        for instance if all values between and including 10m and 100m

        z=10/100

        finally a list of height values can be specified
        i.e. z=value1,value2,value3

        for instance if values at 2m, 10m and 80m are required

        z=2,10,80

        An Arithmetic sequence using Recurring height intervals, the difference is the number of recurrences is defined at the start 
        and the amount to increment the height by is defined at the end

        i.e. z=Rn/min height/height interval

        so if the request was for 20 height levels 50m apart starting at 100m:

        z=R20/100/50

        When not specified data from all available heights SHOULD be returned
      required: false
      schema:
        type: string
      style: form
      explode: false
    parameter-name:
      name: parameter-name
      in: query
      description: comma delimited list of parameters to retrieve data for.  Valid parameters are listed in the collections metadata
      schema:
        type: string
      style: form
      explode: false
      required: false
    crs:
      name: crs
      in: query
      description: identifier (id) of the coordinate system to return data in list of valid crs identifiers for the chosen collection are defined in the metadata responses.  If not supplied the coordinate reference system will default to WGS84.
      required: false
      example: native
      schema:
        type: string
  schemas:
    link:
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          example: https://example.com/collections/monitoringsites/locations/1234
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Monitoring site name
        length:
          type: integer
        templated:
          description: defines if the link href value is a template with values requiring replacement
          type: boolean
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Meteorological data server
        description:
          type: string
          example: Access to Meteorological data via a Web API that conforms to the OGC API Environmental Data Retrieval specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: https://example.org/edr/api
              hreflang: en
              rel: service-desc
              type: application/vnd.oai.openapi+json;version=3.0
              title: ''
            - href: https://example.org/edr/conformance
              hreflang: en
              rel: data
              type: application/json
              title: ''
            - href: https://example.org/edr/collections
              hreflang: en
              rel: data
              type: application/json
              title: ''
        keywords:
          type: array
          items:
            type: string
          example:
            - Temperature
            - Wind
            - Point
            - Trajectory
        provider:
          type: object
          properties:
            name:
              description: Name of organization providing the service
              type: string
            url:
              description: Link to service providers website
              type: string
        contact:
          type: object
          properties:
            email:
              description: Email address of service provider
              type: string
            phone:
              description: Phone number of service provider
              type: string
            fax:
              description: Fax number of service provider
              type: string
            hours:
              type: string
            instructions:
              type: string
            address:
              type: string
            postalCode:
              type: string
            city:
              type: string
            stateorprovince:
              type: string
            country:
              type: string
    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
    exception:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    extent:
      description: |-
        The extent of the information in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
      type: object
      properties:
        spatial:
          description: The spatial extent of the information in the collection.
          type: object
          required:
            - bbox
            - crs
          properties:
            bbox:
              description: |-
                One or more bounding boxes that describe the spatial extent of the dataset.
                In the Core only a single bounding box is supported. Extensions may support
                additional areas. If multiple areas are provided, the union of the bounding
                boxes describes the spatial extent.
              type: array
              items:
                description: |-
                  Each bounding box is provided as four or six numbers, depending on
                  whether the coordinate reference system includes a vertical axis
                  (height or depth):

                  * Lower left corner, coordinate axis 1
                  * Lower left corner, coordinate axis 2
                  * Minimum value, coordinate axis 3 (optional)
                  * Upper right corner, coordinate axis 1
                  * Upper right corner, coordinate axis 2
                  * Maximum value, coordinate axis 3 (optional)

                  The coordinate reference system of the values is WGS 84 longitude/latitude
                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
                  reference system is specified in `crs`.

                  For WGS 84 longitude/latitude the values are in most cases the sequence of
                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                  However, in cases where the box spans the antimeridian the first value
                  (west-most box edge) is larger than the third value (east-most box edge).

                  If the vertical axis is included, the third and the sixth number are
                  the bottom and the top of the 3-dimensional bounding box.

                  If a feature has multiple spatial geometry properties, it is the decision of the
                  server whether only a single spatial geometry property is used to determine
                  the extent or all relevant geometries.
                oneOf:
                  - items:
                      type: number
                    minItems: 4
                    maxItems: 4
                    type: array
                  - items:
                      type: number
                    minItems: 6
                    maxItems: 6
                    type: array
              example:
                - -180
                - -90
                - 180
                - 90
            crs:
              description: |-
                Coordinate reference system of the coordinates in the spatial extent
                (property `bbox`). The default reference system is WGS 84 longitude/latitude.
                In the Core this is the only supported coordinate reference system.
                Extensions may support additional coordinate reference systems 
              type: string
              default: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
            name:
              description: Name of the vertical coordinate reference system
              type: string
        temporal:
          description: The temporal extent of the information in the collection.
          type: object
          required:
            - interval
            - trs
          properties:
            interval:
              description: RFC3339 compliant Date and Time
              type: array
              minItems: 1
              items:
                description: |-
                  Begin and end times of the time interval. The timestamps are in the
                  temporal coordinate reference system specified in `trs`. By default
                  this is the Gregorian calendar.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                  - - 2020-11-12T12:15Z
                    - 2020-11-12T12:15Z
                  - - 2020-11-12T12:15Z
                    - 2020-11-12T12:45Z
                  - - 2022-01-14T09:00Z
                    - 2022-01-15T09:00Z
                  - - 2022-01-14T09:00Z
                    - 2022-01-14T21:00Z
                  - - 2022-01-14T09:00Z
                    - 2022-01-16T09:00Z
            values:
              description: |-
                Provides information about the time intervals available in the collection 
                as ISO8601 compliant dates, either as a time range specified 
                as start time / end time  (e.g. 2017-11-14T09:00Z/2017-11-14T21:00Z)  or
                as number of repetitions / start time / interval (e.g. R4/2017-11-14T21:00Z/PT3H) 
                or a list of time values (e.g.
                2017-11-14T09:00Z,2017-11-14T12:00Z,2017-11-14T15:00Z,2017-11-14T18:00Z,2017-11-14T21:00Z)
              type: array
              minItems: 1
              items:
                type: string
                minItems: 1
                format: date-time
                nullable: true
                example:
                  - - 2020-11-12T12:15Z
                  - - 2020-11-12T12:15Z
                    - 2020-11-12T12:30Z
                    - 2020-11-12T12:45Z
                  - - R12/2022-01-14T09:00Z/2022-01-15T09:00Z
                  - - R12/2022-01-14T09:00Z/PT1H
                  - - R12/2022-01-14T09:00Z/PT1H
                    - R4/2022-01-14T21:00Z/PT3H
                    - R4/2022-01-15T09:00Z/PT6H
            trs:
              description: |-
                Coordinate reference system of the coordinates in the temporal extent
                (property `interval`). The default reference system is the Gregorian calendar.
                In the Core this is the only supported temporal coordinate reference system.
                Extensions may support additional temporal coordinate reference systems 
              type: string
              example: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time (T)",future]]
              default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
            name:
              description: Name of the temporal coordinate reference system
              type: string
        vertical:
          description: The vertical extent of the information in the collection.
          type: object
          required:
            - interval
            - vrs
          properties:
            interval:
              description: |-
                In the Core only a single time interval is supported. Extensions may support
                multiple intervals. If multiple intervals are provided, the union of the
                intervals describes the vertical extent.
              type: array
              minItems: 1
              items:
                description: |-
                  minimum and maximum heights of the vertical interval. The values are in the
                  vertical coordinate reference system specified in `vrs`. By default
                  this is the vertical coordinate reference system of the source information.
                type: array
                minItems: 1
                items:
                  type: string
                  nullable: true
                example:
                  - - '2'
                    - '100'
            values:
              description: |-
                Vertical level intervals that data in the collection is available at 
                these can be defined as follows:
                min level / max level (e.g. "2/100") or 
                as number of repetitions / start level / interval (e.g."R5/100/50") 
                or a list of vertical levels (e.g. "2",10,"80","100"}
                The value `null` is supported and indicates an open vertical interval.
              type: array
              minItems: 1
              items:
                type: string
                nullable: true
                example:
                  - - 2/100
                  - - R20/1000/-50
                  - - '2'
                    - '10'
                    - '80'
                    - '100'
            vrs:
              description: |-
                Coordinate reference system of the coordinates in the vertical extent
                (property `interval`). 
              type: string
              example: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
              default: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
            name:
              description: Name of the vertical coordinate reference system
              type: string
    crsObject:
      type: object
      required:
        - crs
        - wkt
      properties:
        crs:
          description: name of the coordinate reference system, used as the value in the crs query parameter to define the required output CRS
          type: string
          example: native
        wkt:
          description: Well Known text description of the coordinate reference system
          type: string
          example: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
    DataQuery:
      description: Property to contain any extra metadata information that is specific to an individual data query
      type: object
      required:
        - title
        - description
        - output_formats
        - default_output_format
        - crs_details
      properties:
        title:
          description: title of the query
          type: string
          example: Position query
        description:
          description: description of the query
          type: string
          example: Query to return data for a defined well known text point
        output_formats:
          description: list of output formats supported by the Position query
          type: array
          items:
            type: string
          example:
            - CoverageJSON
            - GeoJSON
        default_output_format:
          description: default output format for the Position query
          type: string
        crs_details:
          description: List of key/value definitions for the CRS's supported by the Position query.  The key is the query parameter and the value is the Well Known Text description
          type: array
          items:
            $ref: '#/components/schemas/crsObject'
    positionDataQuery:
      allOf:
        - $ref: '#/components/schemas/DataQuery'
      required:
        - query_type
      properties:
        query_type:
          description: Type of EDR query
          type: string
          enum:
            - position
          example: position
    positionLink:
      allOf:
        - $ref: '#/components/schemas/link'
      properties:
        href:
          type: string
          example: https://example.com/collections/monitoringsites/position
        variables:
          $ref: '#/components/schemas/positionDataQuery'
    locationsDataQuery:
      allOf:
        - $ref: '#/components/schemas/DataQuery'
      required:
        - query_type
      properties:
        query_type:
          description: Type of EDR query
          type: string
          enum:
            - locations
          example: locations
    locationsLink:
      allOf:
        - $ref: '#/components/schemas/link'
      properties:
        href:
          type: string
          example: https://example.com/collections/monitoringsites/locations
        variables:
          $ref: '#/components/schemas/locationsDataQuery'
    itemsDataQuery:
      description: Property to contain any extra metadata information that is specific to an individual data queries
      type: object
      properties:
        title:
          description: title of the query
          type: string
          example: Items query
        description:
          description: description of the query
          type: string
          example: Query to return data for a defined well known text point
        query_type:
          description: Type of EDR query
          type: string
          enum:
            - items
          example: items
    itemsLink:
      allOf:
        - $ref: '#/components/schemas/link'
      properties:
        href:
          type: string
          example: https://example.com/collections/monitoringsites/items
        variables:
          $ref: '#/components/schemas/itemsDataQuery'
    units:
      type: object
      title: unit name
      description: definition of data units
      anyOf:
        - required:
            - label
        - required:
            - symbol
        - required:
            - label
            - symbol
      properties:
        label:
          additionalProperties:
            type: string
        symbol:
          title: Describe unit symbol
          oneOf:
            - type: object
              description: Information about the symbol used to describe the units
              required:
                - value
                - type
              properties:
                value:
                  description: representation of the units symbol
                  type: string
                type:
                  description: uri to detailed desxcription of the units
                  type: string
            - type: string
          example:
            value: hPa
            type: http://www.opengis.net/def/uom/UCUM/
        id:
          type: string
      example:
        label:
          en: Kelvin
        symbol:
          value: K
          type: http://www.opengis.net/def/uom/UCUM/
    observedPropertyCollection:
      type: object
      title: name of property
      description: Description of the property
      required:
        - label
      properties:
        id:
          description: |-
            URI linking to an external registry which contains the definitive definition of
            the observed property
          type: string
        label:
          oneOf:
            - type: string
            - type: object
        description:
          type: string
        categories:
          type: array
          items:
            minItems: 1
            type: object
            required:
              - id
              - label
            properties:
              id:
                description: |-
                  URI linking to an external registry which contains the definitive definition of
                  the observed property
                type: string
              label:
                oneOf:
                  - type: string
                  - type: object
              description:
                oneOf:
                  - type: string
                  - type: object
                    required:
                      - en
                    properties:
                      en:
                        type: string
      example:
        id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
        label: Sea Ice Concentration
    parameterNames:
      type: object
      title: Parameter name
      description: Definition of data parameter
      required:
        - type
        - observedProperty
      properties:
        type:
          description: type
          enum:
            - Parameter
        description:
          type: string
        label:
          type: string
        data-type:
          description: Data type of returned parameter
          type: string
          enum:
            - integer
            - float
            - string
        unit:
          $ref: '#/components/schemas/units'
        observedProperty:
          $ref: '#/components/schemas/observedPropertyCollection'
        categoryEncoding:
          type: object
          additionalProperties:
            oneOf:
              - type: integer
              - type: array
                items:
                  type: integer
        extent:
          $ref: '#/components/schemas/extent'
        id:
          description: Unique ID of the parameter, this is the value used for querying the data
          type: string
        measurementType:
          type: object
          title: Parameter measurement approach
          description: Approach to calculating the data values
          required:
            - method
          properties:
            method:
              type: string
              example: mean
            duration:
              type: string
              title: Measurement time duration
              description: The time duration that the value was calculated for as an RFC3339 duration value.  If the method value is instantaneous this value is not required.
              example: PT10M
      example:
        type: Parameter
        id: sea_ice
        description: Sea Ice concentration (ice=1;no ice=0)
        unit:
          label: Ratio
          symbol:
            value: '1'
            type: http://www.opengis.net/def/uom/UCUM/
        observedProperty:
          id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
          label: Sea Ice Concentration
    collection:
      type: object
      required:
        - links
        - id
        - extent
        - data_queries
        - parameter_names
        - output_formats
        - crs
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: https://example.org/service/description.html
              hreflang: en
              rel: service-doc
              type: text/html
              title: ''
            - href: https://example.org/service/licence.html
              hreflang: en
              rel: licence
              type: text/html
              title: ''
            - href: https://example.org/service/terms-and-conditions.html
              hreflang: en
              rel: restrictions
              type: text/html
              title: ''
            - href: https://example.org/edr/collections/the_collection_id/
              hreflang: en
              rel: collection
              type: collection
              title: Collection
            - href: https://example.org/edr/collections/the_collection_id/position
              hreflang: en
              rel: data
              type: position
              title: Position
            - href: https://example.org/edr/collections/the_collection_id/area
              hreflang: en
              rel: data
              type: area
              title: Area
        id:
          description: id of the collection
          type: string
          example: Metar data
        title:
          description: title of the collection
          type: string
          example: Metar observations
        description:
          description: description of the collection
          type: string
          example: Last 24 hours Metar observations
        keywords:
          description: List of keywords which help to describe the collection
          type: array
          items:
            type: string
        extent:
          $ref: '#/components/schemas/extent'
        data_queries:
          description: Detailed information relevant to individual query types
          type: object
          required:
            - position
          properties:
            position:
              type: object
              properties:
                link:
                  $ref: '#/components/schemas/positionLink'
            locations:
              type: object
              properties:
                link:
                  $ref: '#/components/schemas/locationsLink'
            items:
              type: object
              properties:
                link:
                  $ref: '#/components/schemas/itemsLink'
        crs:
          description: list of the coordinate reference systems the collection results can support
          type: array
          items:
            type: string
        output_formats:
          description: list of formats the results can be presented in
          type: array
          items:
            type: string
          example:
            - CoverageJSON
            - GeoJSON
        parameter_names:
          description: list of the data parameters available in the collection
          type: object
          additionalProperties:
            items:
              $ref: '#/components/schemas/parameterNames'
    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: https://example.org/edr/collections
              hreflang: en
              rel: self
              type: application/yaml
            - href: https://example.org/edr/collections?f=html
              hreflang: en
              rel: alternate
              type: text/html
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
    valuesAxisBase:
      description: Base schema for values-based axis schemas
      properties:
        dataType:
          type: string
          not:
            enum:
              - primitive
        values:
          type: array
          minItems: 1
          uniqueItems: true
        coordinates:
          type: array
          items:
            type: string
          minItems: 2
        bounds:
          description: Optional axis bounds. Shall be twice as long (and same data type) as "values"
          type: array
          minItems: 2
      required:
        - values
    numericValuesAxis:
      description: Axis defined by list of numeric axis values and optional bounds
      allOf:
        - $ref: '#/components/schemas/valuesAxisBase'
        - properties:
            values:
              items:
                type: number
            bounds:
              items:
                type: number
          additionalProperties: false
    numericRegularlySpacedAxis:
      description: A regularly-spaced numeric axis
      properties:
        start:
          type: number
        stop:
          type: number
        num:
          type: integer
          minimum: 1
      required:
        - start
        - stop
        - num
      additionalProperties: false
    numericAxis:
      description: Simple axis with numeric values
      oneOf:
        - $ref: '#/components/schemas/numericValuesAxis'
        - $ref: '#/components/schemas/numericRegularlySpacedAxis'
    stringValuesAxis:
      description: Simple axis with string values (e.g. time strings)
      allOf:
        - $ref: '#/components/schemas/valuesAxisBase'
        - properties:
            values:
              items:
                type: string
            bounds:
              items:
                type: string
          additionalProperties: false
    i18n:
      type: object
      description: Object representing an internationalised string.
      additionalProperties:
        type: string
    referenceSystem:
      type: object
      properties:
        type:
          type: string
      required:
        - type
      oneOf:
        - description: Temporal reference system
          properties:
            calendar:
              type: string
            timeScale:
              type: string
          required:
            - calendar
        - description: An identifier-based reference system
          properties:
            id:
              type: string
            label:
              $ref: '#/components/schemas/i18n'
            description:
              $ref: '#/components/schemas/i18n'
            targetConcept:
              type: object
              properties:
                id:
                  type: string
                label:
                  $ref: '#/components/schemas/i18n'
                description:
                  $ref: '#/components/schemas/i18n'
              required:
                - label
            identifiers:
              type: object
              additionalProperties:
                type: object
                properties:
                  id:
                    type: string
                  label:
                    $ref: '#/components/schemas/i18n'
                  description:
                    $ref: '#/components/schemas/i18n'
                required:
                  - label
          required:
            - targetConcept
    referenceSystemConnection:
      description: 'Reference System Connection object: connects coordinates to reference systems'
      type: object
      properties:
        coordinates:
          type: array
          items:
            type: string
          minItems: 1
        system:
          $ref: '#/components/schemas/referenceSystem'
      required:
        - coordinates
        - system
    domain:
      description: A Domain, which defines a set of positions and their extent in one or more referencing systems
      type: object
      properties:
        type:
          type: string
          enum:
            - Domain
        domainType:
          type: string
        axes:
          type: object
          description: 'Grid domain: x and y are required, z and t optional'
          properties:
            x:
              $ref: '#/components/schemas/numericAxis'
            'y':
              $ref: '#/components/schemas/numericAxis'
            z:
              $ref: '#/components/schemas/numericAxis'
            t:
              $ref: '#/components/schemas/stringValuesAxis'
          required:
            - x
            - 'y'
        referencing:
          type: array
          items:
            $ref: '#/components/schemas/referenceSystemConnection'
      required:
        - type
        - axes
    observedProperty:
      type: object
      description: A definition of the quantity being measured.
      properties:
        id:
          type: string
        label:
          $ref: '#/components/schemas/i18n'
        description:
          $ref: '#/components/schemas/i18n'
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              label:
                $ref: '#/components/schemas/i18n'
              description:
                $ref: '#/components/schemas/i18n'
            required:
              - id
              - label
          minItems: 1
      required:
        - label
    unit:
      type: object
      description: The units of measure
      properties:
        id:
          type: string
        label:
          $ref: '#/components/schemas/i18n'
        symbol:
          oneOf:
            - type: string
            - type: object
              properties:
                type:
                  type: string
                value:
                  type: string
              required:
                - type
                - value
      anyOf:
        - required:
            - label
        - required:
            - symbol
    parameter:
      type: object
      description: Represents metadata about the values of the coverage
      properties:
        id:
          type: string
        type:
          description: Type of the parameter object, shall be "Parameter"
          type: string
          enum:
            - Parameter
        description:
          $ref: '#/components/schemas/i18n'
        observedProperty:
          $ref: '#/components/schemas/observedProperty'
        unit:
          $ref: '#/components/schemas/unit'
        categoryEncoding:
          type: object
          description: Maps IDs of categories in the observedProperty to range values
          additionalProperties:
            oneOf:
              - type: integer
              - type: array
                items:
                  type: integer
      required:
        - type
        - observedProperty
    ndArray:
      type: object
      description: Object representing a multidimensional (>= 0D) array with named axes, encoded as a flat one-dimensional array in row-major order
      properties:
        type:
          type: string
          enum:
            - NdArray
        dataType:
          enum:
            - float
            - integer
            - string
        shape:
          type: array
          items:
            type: number
        axisNames:
          type: array
          items:
            type: string
          uniqueItems: true
        values:
          type: array
          items:
            type: number
            nullable: true
          minItems: 1
      oneOf:
        - properties:
            values:
              items:
                type: number
              nullable: true
        - properties:
            values:
              items:
                type: integer
              nullable: true
        - properties:
            values:
              items:
                type: string
              nullable: true
        - properties:
            shape:
              minItems: 1
            axisNames:
              minItems: 1
          required:
            - shape
            - axisNames
      required:
        - type
        - dataType
        - values
    coverageJSON:
      type: object
      title: CoverageJSON
      description: A geospatial coverage interchange format based on JavaScript Object Notation (JSON)
      required:
        - type
      properties:
        type:
          description: Coverage domain type
          type: string
          enum:
            - Coverage
        domain:
          $ref: '#/components/schemas/domain'
        parameters:
          additionalProperties:
            type: object
            $ref: '#/components/schemas/parameter'
        ranges:
          type: object
          additionalProperties:
            type: object
            $ref: '#/components/schemas/ndArray'
    pointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
    multipointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
    linestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
            - LineStringM
            - LineStringZ
            - LineStringZM
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              maxItems: 4
              items:
                type: number
    multilinestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
    polygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
    multipolygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
    geometrycollectionGeoJSON:
      type: object
      required:
        - type
        - geometries
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/pointGeoJSON'
              - $ref: '#/components/schemas/multipointGeoJSON'
              - $ref: '#/components/schemas/linestringGeoJSON'
              - $ref: '#/components/schemas/multilinestringGeoJSON'
              - $ref: '#/components/schemas/polygonGeoJSON'
              - $ref: '#/components/schemas/multipolygonGeoJSON'
    edrProperties:
      type: object
      title: EDR GeoJSON Properties
      description: Properties to describe existing EDR features -- may be real-world or virtual sampling features.
      example:
        - datetime: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
          label: Monitoring site name
          parameter-name:
            - velocity
            - temperature
          edrqueryendpoint: https://example.org/api/collections/collection/locations/location_123
      required:
        - datetime
        - parameter-name
        - label
        - edrqueryendpoint
      properties:
        datetime:
          type: string
          title: Date/time Domain
          description: Either a date-time or a period string that adheres to RFC 3339. Indicates the time instant or period for which data are available from the EDR feature.
          default: ''
          example:
            - 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
        parameter-name:
          type: array
          title: Available Parameters
          description: Unique IDs of available parameters, this is the value used for querying the data and corresponds to an ID in the parameter metadata of the collection.
          items:
            type: string
            title: Parameter ID list
            description: Each entry should contain one parameter ID that can be used to query against the feature.
            default: ''
            example:
              - velocity
              - temperature
        label:
          type: string
          title: Label
          description: A label such as a site name or other text to use on a link.
          default: ''
          example:
            - Site A
        edrqueryendpoint:
          type: string
          title: EDR Query Endpoint
          description: A URI identifying the query end point. May identify a specific location.
          default: ''
          example:
            - https://example.org/api/collections/collection/locations/location_123d}
    featureGeoJSON:
      type: object
      required:
        - type
        - geometry
        - properties
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          oneOf:
            - $ref: '#/components/schemas/pointGeoJSON'
            - $ref: '#/components/schemas/multipointGeoJSON'
            - $ref: '#/components/schemas/linestringGeoJSON'
            - $ref: '#/components/schemas/multilinestringGeoJSON'
            - $ref: '#/components/schemas/polygonGeoJSON'
            - $ref: '#/components/schemas/multipolygonGeoJSON'
            - $ref: '#/components/schemas/geometrycollectionGeoJSON'
        properties:
          $ref: '#/components/schemas/edrProperties'
        id:
          oneOf:
            - type: string
            - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    numberMatched:
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      type: integer
      minimum: 0
      example: 127
    numberReturned:
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      minimum: 0
      example: 10
    edrFeatureCollectionGeoJSON:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        parameters:
          description: list of the data parameters available in the collection
          type: array
          items:
            $ref: '#/components/schemas/parameter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          description: This property indicates the time and date when the response was generated.
          type: string
          format: date-time
          example: '2017-08-17T08:05:32Z'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
  responses:
    '200':
      description: Data ranges required to construct valid queries for the choosen data collection
      content:
        application/prs.coverage+json:
          schema:
            $ref: '#/components/schemas/coverageJSON'
        application/geo+json:
          schema:
            $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
    '202':
      description: Data request still being processed
    '308':
      description: Request will take a significant time to process
    '400':
      description: Invalid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    '404':
      description: Requested data not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    '413':
      description: Requested data volume to large to be handled by this service.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    landingPage:
      description: links to the API capabilities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
    conformance:
      description: URIs of all requirements classes supported by the server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
        text/html:
          schema:
            type: string
    exception:
      description: An error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
    collections:
      description: Metadata about the Environmental data collections shared by this API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
    collection:
      description: Metadata about the {collectionId} collection shared by this API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
        text/html:
          schema:
            type: string
